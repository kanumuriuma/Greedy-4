Shortest Way to Form String
#tc:O(m+n)
#sc: O(m)
class Solution:
    def shortestWay(self, source: str, target: str) -> int:
        dic = {}
        for i in range(len(source))[::-1]:
            c = source[i]
            dic[i] = {} if i + 1 not in dic else dic[i + 1].copy()
            dic[i][c] = i + 1
        result = 0
        ind = 0
        for char in target:
            if char not in dic[0]: return -1
            if ind == len(source) or char not in dic[ind]:
                ind = 0
                result += 1
            ind = dic[ind][char]
        return result + 1

Minimum Domino Rotations For Equal Row
#tc: O(n)
#sc: O(1)
class Solution:
    def minDominoRotations(self, tops: List[int], bottoms: List[int]) -> int:
        total = len(tops)
        top_fr, bot_fr, val_total = [0]*7, [0]*7, [total]*7
        for top, bot in zip(tops, bottoms):
            if top == bot:
                val_total[top] -= 1
            else:
                top_fr[top] += 1
                bot_fr[bot] += 1
                
        for val in range(1, 7):
            if (val_total[val] - top_fr[val]) == bot_fr[val]:
                return min(top_fr[val], bot_fr[val])
            
        return -1
